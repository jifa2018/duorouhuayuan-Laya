{
  "code": "import { Debug } from \"./Debug\";\r\nexport class TEvent {\r\n    constructor() {\r\n        this._handerList = new Array();\r\n    }\r\n    Add(handler) {\r\n        this._handerList.push(handler);\r\n    }\r\n    Remove(handler) {\r\n        for (let i = 0; i < this._handerList.length; i++) {\r\n            if (handler.caller == this._handerList[i].caller && handler.method == this._handerList[i].method) {\r\n                this._handerList[i].recover();\r\n                this._handerList.splice(i, 1);\r\n                handler.recover();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    Exec(args) {\r\n        for (let i = this._handerList.length; i >= 0; i--) {\r\n            let handler = this._handerList[i];\r\n            if (handler != null) {\r\n                handler.setTo(handler.caller, handler.method, args, false);\r\n                handler.run();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class GEvent {\r\n    static DispatchEvent(type, args) {\r\n        if (!(args instanceof Array))\r\n            args = [args];\r\n        let ev = GEvent._eventList[type];\r\n        if (ev != null) {\r\n            try {\r\n                ev.Exec(args);\r\n            }\r\n            catch (e) {\r\n                Debug.LogError(e);\r\n            }\r\n        }\r\n    }\r\n    static RegistEvent(type, handler) {\r\n        let ev = GEvent._eventList[type];\r\n        if (ev == null) {\r\n            ev = new TEvent();\r\n            GEvent._eventList[type] = ev;\r\n        }\r\n        ev.Add(handler);\r\n    }\r\n    static RemoveEvent(type, handler) {\r\n        let ev = GEvent._eventList[type];\r\n        if (ev != null && handler != null) {\r\n            ev.Remove(handler);\r\n        }\r\n    }\r\n}\r\nGEvent._eventList = {};\r\n//# sourceMappingURL=GEvent.js.map",
  "references": [
    "E:/project/duorou/client/src/common/Debug.ts"
  ],
  "map": "{\"version\":3,\"file\":\"GEvent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/common/GEvent.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,OAAO,MAAM;IAGf;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,EAAgB,CAAC;IACjD,CAAC;IAEM,GAAG,CAAC,OAAqB;QAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,OAAqB;QAC/B,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtD,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;gBAC9F,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;gBAC9B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC9B,OAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,OAAO;aACV;SACJ;IACL,CAAC;IAEM,IAAI,CAAC,IAAiB;QACzB,KAAK,IAAI,CAAC,GAAW,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACvD,IAAI,OAAO,GAAiB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,OAAO,IAAI,IAAI,EAAE;gBACjB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;gBAC3D,OAAO,CAAC,GAAG,EAAE,CAAC;aACjB;SACJ;IACL,CAAC;CACJ;AAED,MAAM,OAAO,MAAM;IASR,MAAM,CAAC,aAAa,CAAC,IAAY,EAAE,IAAU;QAChD,IAAI,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;YACxB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,EAAE,GAAW,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,EAAE,IAAI,IAAI,EAAE;YACZ,IAAI;gBACA,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjB;YACD,OAAO,CAAC,EAAE;gBACN,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACrB;SACJ;IACL,CAAC;IAOM,MAAM,CAAC,WAAW,CAAC,IAAY,EAAE,OAAqB;QACzD,IAAI,EAAE,GAAW,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,EAAE,IAAI,IAAI,EAAE;YACZ,EAAE,GAAG,IAAI,MAAM,EAAE,CAAA;YACjB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SAChC;QACD,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACpB,CAAC;IAOM,MAAM,CAAC,WAAW,CAAC,IAAY,EAAE,OAAqB;QACzD,IAAI,EAAE,GAAW,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,EAAE,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,EAAE;YAC/B,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACtB;IACL,CAAC;;AA9Cc,iBAAU,GAAW,EAAE,CAAC\"}"
}
