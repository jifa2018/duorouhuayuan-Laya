{
  "code": "import { LogLevel } from \"../game/GameDefine\";\r\nexport class Debug {\r\n    static Log(msg) {\r\n        if (Debug._logLevel >= LogLevel.Log) {\r\n            if (Debug._onLog != null) {\r\n                Debug._onLog.setTo(Debug._onLog.caller, Debug._onLog.method, [msg], false);\r\n                Debug._onLog.run();\r\n            }\r\n        }\r\n    }\r\n    static LogWarning(msg) {\r\n        if (Debug._logLevel >= LogLevel.Warning) {\r\n            if (Debug._onLogWarning != null) {\r\n                Debug._onLogWarning.setTo(Debug._onLogWarning.caller, Debug._onLogWarning.method, [msg], false);\r\n                Debug._onLogWarning.run();\r\n            }\r\n        }\r\n    }\r\n    static LogError(msg) {\r\n        if (Debug._logLevel >= LogLevel.Error) {\r\n            if (Debug._onLogError != null) {\r\n                Debug._onLogError.setTo(Debug._onLogError.caller, Debug._onLogError.method, [msg], false);\r\n                Debug._onLogError.run();\r\n            }\r\n        }\r\n    }\r\n    static Assert(condition, msg = \"\") {\r\n        if (Debug._onAssert != null) {\r\n            Debug._onLogError.setTo(Debug._onLogError.caller, Debug._onLogError.method, [condition, msg], false);\r\n            Debug._onLogError.run();\r\n        }\r\n    }\r\n}\r\nDebug._logLevel = 100;\r\nDebug.isLock = true;\r\nDebug._onLog = Laya.Handler.create(null, (msg) => {\r\n    if (Debug.isLock) {\r\n        console.log(msg);\r\n    }\r\n});\r\n",
  "references": [
    "E:/project/duorou/client/src/game/GameDefine.ts"
  ]
}
