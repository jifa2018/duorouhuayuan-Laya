{
  "code": "import { PathManager } from \"../../manager/PathManager\";\r\nvar Vector3 = Laya.Vector3;\r\nvar Handler = Laya.Handler;\r\nimport { CommonDefine } from \"../../common/CommonDefine\";\r\nimport { GatherStateType } from \"../Staff/Gatherman\";\r\nimport { GrassManager } from \"../../manager/GrassManager\";\r\nimport { Tree } from \"../item/Tree\";\r\nimport GameScene from \"../scene/GameScene\";\r\nimport { GameData } from \"../data/GameData\";\r\nimport { Staff_Cfg } from \"../../manager/ConfigManager\";\r\nexport var CollectAIState;\r\n(function (CollectAIState) {\r\n    CollectAIState[CollectAIState[\"defult\"] = 0] = \"defult\";\r\n    CollectAIState[CollectAIState[\"to\"] = 1] = \"to\";\r\n    CollectAIState[CollectAIState[\"find\"] = 2] = \"find\";\r\n})(CollectAIState || (CollectAIState = {}));\r\nexport class CollectAI {\r\n    constructor(ower) {\r\n        this.curState = CollectAIState.defult;\r\n        this.CurIndex = 0;\r\n        this.character = ower;\r\n        this.collectPath = new Array();\r\n    }\r\n    beginCollect() {\r\n        this.WalkOn(1);\r\n    }\r\n    stopCollect() {\r\n        this.character.stopMove();\r\n        this.CurIndex = 0;\r\n        Laya.timer.clearAll(this);\r\n    }\r\n    UpdateCollectPoint() {\r\n        let data = this.character.getFindItemData();\r\n        if (!data[\"area\"] || !data[\"itemId\"] || !data[\"pos\"]) {\r\n            this.WalkOn(this.getNextIndex(this.CurIndex));\r\n            return;\r\n        }\r\n        if (this.CurIndex == data[\"area\"]) {\r\n            this.WalkToCollectPoint(data);\r\n        }\r\n        else {\r\n            let path = new Array();\r\n            for (let i = 0; i < 10; i++) {\r\n                this.CurIndex = this.getNextIndex(this.CurIndex);\r\n                let p = PathManager.getInstance().getCollectPathByName(this.CurIndex.toString());\r\n                path = path.concat(p);\r\n                if (this.CurIndex == data[\"area\"])\r\n                    break;\r\n            }\r\n            this.character.moveTo(path, Handler.create(this, () => {\r\n                this.WalkToCollectPoint(data);\r\n            }));\r\n        }\r\n    }\r\n    WalkToCollectPoint(data) {\r\n        if (!data[\"itemId\"] || !data[\"pos\"]) {\r\n            this.WalkOn(this.getNextIndex(this.CurIndex));\r\n            debugger;\r\n            return;\r\n        }\r\n        let tree = this.CreatTree(data[\"itemId\"], data[\"pos\"]);\r\n        this.character.moveTo([data[\"pos\"]], Handler.create(this, () => {\r\n            this.character.playAnimation(CommonDefine.ANIMATION_caiji);\r\n            Laya.timer.once(this.character.GetOnceCollectTime(), this, () => {\r\n                tree.destroy();\r\n                GameData.AddItem(Staff_Cfg[this.character.GetId()].staffID, data[\"itemId\"]);\r\n                this.character.clearFindItemData();\r\n                this.WalkOn(this.getNextIndex(this.CurIndex));\r\n            });\r\n        }));\r\n    }\r\n    WalkCycle(path) {\r\n        this.character.moveTo(path, Handler.create(this, () => {\r\n            this.UpdateCollectPoint();\r\n        }));\r\n    }\r\n    getNextIndex(curIndex) {\r\n        if (curIndex >= 10)\r\n            curIndex = 1;\r\n        else\r\n            curIndex++;\r\n        return curIndex;\r\n    }\r\n    WalkOn(curIndex) {\r\n        this.CurIndex = curIndex;\r\n        this.collectPath = PathManager.getInstance().getCollectPathByName(this.CurIndex.toString());\r\n        this.WalkCycle(this.collectPath);\r\n    }\r\n    ChangState(_state) {\r\n        this.curState = _state;\r\n        if (this.character && this.character.getState() == GatherStateType.Collecting) {\r\n            switch (this.curState) {\r\n                case CollectAIState.defult:\r\n                    break;\r\n                case CollectAIState.to:\r\n                    this.moveTo();\r\n                    break;\r\n                case CollectAIState.find:\r\n                    this.moveFind();\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            if (this.curState != CollectAIState.defult) {\r\n                console.log(\"AI此处是有问题的！！！\");\r\n            }\r\n        }\r\n    }\r\n    moveTo() {\r\n        var pos = this.nextPoint();\r\n        this.character.moveTo([pos], Handler.create(this, function () {\r\n            this.character.playAnimation(CommonDefine.ANIMATION_chazhao);\r\n            Laya.timer.once(this.sleepTime, this, function () {\r\n                this.ChangState(CollectAIState.find);\r\n            });\r\n        }));\r\n    }\r\n    moveFind() {\r\n        let data = this.character.getFindItemData();\r\n        if (data[\"itemId\"] == null || data[\"itemId\"] == undefined) {\r\n            this.ChangState(CollectAIState.to);\r\n            return;\r\n        }\r\n        if (data[\"pos\"] == null || data[\"pos\"] == undefined) {\r\n            this.ChangState(CollectAIState.to);\r\n            return;\r\n        }\r\n        let tree = this.CreatTree(Number(data[\"itemId\"]), data[\"pos\"]);\r\n        this.character.moveTo([data[\"pos\"]], Handler.create(this, function () {\r\n            this.character.playAnimation(CommonDefine.ANIMATION_caiji);\r\n            Laya.timer.once(this.character.GetOnceCollectTime(), this, () => {\r\n                tree.destroy();\r\n                GameData.AddItem(Staff_Cfg[this.character.GetId()].staffID, data[\"itemId\"]);\r\n                this.character.clearFindItemData();\r\n                this.ChangState(CollectAIState.to);\r\n            });\r\n        }));\r\n    }\r\n    nextPoint() {\r\n        let num = GrassManager.getInstance().GetCurrentLv();\r\n        for (let index = 1; index < num + 1; index++) {\r\n            this.collectPath.push(PathManager.getInstance().getCollectByName(\"collectpoint\" + index));\r\n        }\r\n        var pos = this.collectPath[Math.floor(Math.random() * this.collectPath.length)];\r\n        let minWidth = -1;\r\n        let maxWidth = 1;\r\n        let value_a = Math.random() * (maxWidth - minWidth + 1) + minWidth + \"\";\r\n        let x = parseInt(value_a);\r\n        let minhigh = -1;\r\n        let maxhigh = 1;\r\n        let value_b = Math.random() * (maxhigh - minhigh + 1) + minhigh + \"\";\r\n        let z = parseInt(value_b);\r\n        return new Vector3(pos.x + x, pos.y, pos.z + z);\r\n    }\r\n    CreatTree(id, pos) {\r\n        let tree = new Tree(id);\r\n        GameScene.instance.scene3d.addChild(tree);\r\n        tree.transform.position = pos;\r\n        tree.transform.setWorldLossyScale(new Vector3(0.1, 0.1, 0.1));\r\n        Laya.Tween.to(tree.transform.scale, { x: 3, y: 3, z: 3, update: new Handler(this, function () {\r\n                tree.transform.setWorldLossyScale(tree.transform.getWorldLossyScale());\r\n            }) }, 1000);\r\n        return tree;\r\n    }\r\n}\r\n//# sourceMappingURL=CollectAI.js.map",
  "references": [
    "E:/project/duorou/client/src/manager/PathManager.ts",
    "E:/project/duorou/client/src/common/CommonDefine.ts",
    "E:/project/duorou/client/src/game/Staff/Gatherman.ts",
    "E:/project/duorou/client/src/manager/GrassManager.ts",
    "E:/project/duorou/client/src/game/item/Tree.ts",
    "E:/project/duorou/client/src/game/scene/GameScene.ts",
    "E:/project/duorou/client/src/game/data/GameData.ts",
    "E:/project/duorou/client/src/manager/ConfigManager.ts"
  ],
  "map": "{\"version\":3,\"file\":\"CollectAI.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/game/ai/CollectAI.ts\"],\"names\":[],\"mappings\":\"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\"}"
}
